docker pull minio/minio
 
docker run -d --name minio-server \
  -p 9000:9000 -p 9001:9001 \
  -e "MINIO_ROOT_USER=dALHa0thaMf77gTEtuYK" \
  -e "MINIO_ROOT_PASSWORD=IPeihCVlbpEZrmj2Sect6iALCrzmjC1AK4aDkNy7" \
  -v /mnt/data:/data \
  -v /mnt/config:/root/.minio \
  minio/minio server /data --console-address ":9001"
 
curl http://10.123.16.15:9001
 
aws configure
aws --endpoint-url http://10.123.16.15:9000 s3 mb s3://mybucket
 
aws --endpoint-url http://10.123.16.15:9000 s3 mb s3://spark-connector-logs-prod
aws --endpoint-url http://10.123.16.15:9000 s3 mb s3://spark-files-prod
aws --endpoint-url http://10.123.16.15:9000 s3 mb s3://spark-backup-prod
aws --endpoint-url http://10.123.16.15:9000 s3 mb s3://spark-securityscan-upload-prod
 
aws --endpoint-url http://10.123.16.15:9000 s3 ls
 
 
BUCKET="spark-securityscan-upload-prod"
BACKUP_BUCKET="spark-backup-prod"
IMAGE_BUCKET="spark-files-prod"
LOG_BUCKET="spark-connector-logs-prod"

------------------------------------------------------------------------------------------------------




wget https://dl.min.io/server/minio/release/linux-amd64/minio

sudo mv minio /usr/local/bin/
sudo chmod +x /usr/local/bin/minio

sudo useradd -r minio-user -s /sbin/nologin

sudo mkdir -p /mnt/data/minio
sudo chown minio-user:minio-user /mnt/data/minio

sudo nano /etc/systemd/system/minio.service

[Unit]
Description=MinIO
After=network.target

[Service]
ExecStart=/usr/local/bin/minio server /mnt/data/minio --console-address ":9001"
User=minio-user
Group=minio-user
Environment="S3_ACCESS_KEY=dALHa0thaMf77gTEtuYK"
Environment="S3_SECRET_KEY=IPeihCVlbpEZrmj2Sect6iALCrzmjC1AK4aDkNy7"
Restart=on-failure
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target

sudo systemctl daemon-reload
sudo systemctl enable minio
sudo systemctl start minio

sudo chown minio-user:minio-user /mnt/data/minio

aws configure set aws_access_key_id dALHa0thaMf77gTEtuYK
aws configure set aws_secret_access_key IPeihCVlbpEZrmj2Sect6iALCrzmjC1AK4aDkNy7
aws configure set default.region us-east-1
aws configure set default.s3.signature_version s3v4


aws s3 ls --endpoint-url http://localhost:9000

aws s3 ls s3://spark-securityscan-upload-dev --endpoint-url http://localhost:9000

mc admin policy set myminio spark-securityscan-upload-dev writeonly

aws s3 mb s3://spark-securityscan-upload-dev --endpoint-url http://10.123.16.15:9000

Environment="MINIO_ACCESS_KEY=dALHa0thaMf77gTEtuYK"
Environment="MINIO_SECRET_KEY=IPeihCVlbpEZrmj2Sect6iALCrzmjC1AK4aDkNy7"



S3_ACCESS_KEY=dALHa0thaMf77gTEtuYK
S3_SECRET_KEY=IPeihCVlbpEZrmj2Sect6iALCrzmjC1AK4aDkNy7

mc alias set myminio http://localhost:9000 dALHa0thaMf77gTEtuYK IPeihCVlbpEZrmj2Sect6iALCrzmjC1AK4aDkNy7
mc ls myminio












kuberadmin@kuberubuntu:/etc/nginx/sites-available$ cat reverse-proxy.conf




# Allow Let's Encrypt challenge for domain verification on internal server
server {
    listen 80;
    listen [::]:80;
    server_name spark-dev.eficensittest.com;

    location /.well-known/acme-challenge/ {
        root /var/www/html;  # Ensure this directory exists on your internal server
        allow all;
    }
}

# Forward other traffic based on your internal server setup
# Add your internal server configuration here for actual services if needed.
