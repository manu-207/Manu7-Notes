# installation of kafka using docker compose 
https://www.youtube.com/watch?v=nZeDNMTgQUA
------------------------------------------------------
# docker installation
sudo yum install docker -y
sudo systemctl start docker
sudo systemctl status docker
---------------------------
# docker compose installation
docker --version
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version
-----------------------------------------------
vi docker-compose.yml
version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 10.0.5.48
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
--------------------------------------------------------------------------
docker-compose up -d
docker ps
docker exec -it kafka /bin/bash
cd /opt/kafka/bin/
topic-prod-myscans
# commands
kafka-topics.sh --create --topic topic-prod --zookeeper 10.0.5.48:2181 --partitions 8 --replication-factor 1
kafka-topics.sh --create --topic topic-prod-myscans --zookeeper 10.0.5.48:2181 --partitions 8 --replication-factor 1
kafka-topics.sh --list --zookeeper 10.0.5.48:2181
kafka-console-consumer.sh --bootstrap-server 10.0.5.48:9092 --topic topic-prod --group prod-group --from-beginning
kafka-consumer-groups.sh --bootstrap-server 10.0.5.48:9092 --list
kafka-consumer-groups.sh --bootstrap-server 10.0.5.48:9092 --describe --group prod-group
kafka-console-producer.sh --broker-list 10.0.5.48:9092 --topic topic-prod
kafka-console-consumer.sh --bootstrap-server 10.0.5.48:9092 --topic topic-prod --group prod-group 
---------------------------------------------------------------
# individual restart with docker compose
docker-compose restart zookeeper
docker-compose restart kafka
-------------------------------
# both restart with docker compose
cd /path/to/your/docker-compose.yml
docker-compose restart
---------------------------------------

SELECT id, notification_data, user_id, notification_read_time, read_status, seen_status, date_added, last_modified, created_by, last_modified_by, notification_id
	FROM public.events_notifications_notification_user
	order by date_added DESC
	limit 100;
