#step5: for classic load balancer & RDS

# 01-MySQL-externalName-Service.yml

apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: ExternalName
  externalName: database-1.czj7jypmn3wk.us-east-1.rds.amazonaws.com

# connect to mysql
# kubectl run -it --rm --image=mysql:8.0.33 --restart=Never mysql-client -- mysql -h database-1.czj7jypmn3wk.us-east-1.rds.amazonaws.com -u admin -p
---------------------------------------------------------------
#02-UserManagementMicroservice-Deployment-Service.yml

apiVersion: apps/v1
kind: Deployment 
metadata:
  name: usermgmt-microservice
  labels:
    app: usermgmt-restapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usermgmt-restapp
  template:  
    metadata:
      labels: 
        app: usermgmt-restapp
    spec:
      initContainers:
        - name: init-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']      
      containers:
        - name: usermgmt-restapp
          image: stacksimplify/kube-usermanagement-microservice:1.0.0  
          ports: 
            - containerPort: 8095           
          env:
            - name: DB_HOSTNAME
              value: "mysql"            
            - name: DB_PORT
              value: "3306"            
            - name: DB_NAME
              value: "usermgmt"            
            - name: DB_USERNAME
              value: "admin"        # RDS DB Username is admin     
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-db-password
                  key: db-password           
          livenessProbe:
            exec:
              command: 
                - /bin/sh
                - -c 
                - nc -z localhost 8095
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /usermgmt/health-status
              port: 8095
            initialDelaySeconds: 60
            periodSeconds: 10          
----------------------------------------------------------------------------------------
# 03-Kubernetes-Secrets.yml

apiVersion: v1
kind: Secret
metadata:
  name: mysql-db-password
type: Opaque
data: 
  db-password: TWFudTU3MTg=
--------------------------------------------------------------------------------------
# 04-ClassicLoadBalancer.yml
apiVersion: v1
kind: Service
metadata:
  name: clb-usermgmt-restapp
  labels: 
    app: usermgmt-restapp
spec:
  type: LoadBalancer # Default - CLB
  selector:
    app: usermgmt-restapp
  ports: 
    - port: 80
      targetPort: 8095