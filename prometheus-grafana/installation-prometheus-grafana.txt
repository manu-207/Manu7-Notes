# installation of prometheus and grafana 
https://sunitabachhav2007.hashnode.dev/prometheus-and-grafana-dashboard-on-eks-cluster-using-helm-chart   (including ebs csi drivers)
https://archive.eksworkshop.com/intermediate/240_monitoring/prereqs/  (normal direct approach)

# install matrix server
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

# oidc provider
oidc_id=$(aws eks describe-cluster --name cms-eks --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4

eksctl utils associate-iam-oidc-provider --cluster cms-eks --approve

# iamserviceaccount 
eksctl create iamserviceaccount \
  --name ebs-csi-controller-sa \
  --namespace kube-system \
  --cluster cms-eks \
  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
  --approve \
  --role-only \
  --role-name AmazonEKS_EBS_CSI_DriverRole

eksctl create addon --name aws-ebs-csi-driver --cluster cms-eks --service-account-role-arn arn:aws:iam::238393102293:role/AmazonEKS_EBS_CSI_DriverRole --force

# install prometheus
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm repo list

kubectl create namespace prometheus
 helm install prometheus prometheus-community/prometheus \
    --namespace prometheus \
    --set alertmanager.persistentVolume.storageClass="gp2" \
    --set server.persistentVolume.storageClass="gp2"

# port forward
kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
-------------------------------------------------------------------------------------------------------------------------------------

# install grafana

# add grafana Helm repo
helm repo add grafana https://grafana.github.io/helm-charts

mkdir ${HOME}/environment/grafana
# grafana.yaml
enabled: true
storageClassName: gp2
adminPassword: EKS!sAWSome
service:
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "alb"  # Use "alb" for Application Load Balancer
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    service.beta.kubernetes.io/aws-load-balancer-subnets: "subnet-00fd1ae627434038c,subnet-0b3c5a00092527bd3"  # Combine subnets into a single string
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"  # Set to "internal" for internal ALB
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server.prometheus.svc.cluster.local
        access: proxy
        isDefault: true

kubectl create namespace grafana

helm install grafana grafana/grafana \
    --namespace grafana \
    --set persistence.storageClassName="gp2" \
    --set persistence.enabled=true \
    --set adminPassword='EKS!sAWSome' \
    --values ${HOME}/environment/grafana/grafana.yaml \
    --set service.type=LoadBalancer

export ELB=$(kubectl get svc -n grafana grafana -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
echo "http://$ELB"

kubectl get secret --namespace grafana grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo

# cluster monitoring dashboard ---------> 3119
# pods monitoring dashboard ---------> 6417



