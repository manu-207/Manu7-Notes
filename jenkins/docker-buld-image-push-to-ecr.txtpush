pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID = "238393102293"
        AWS_DEFAULT_REGION = "us-east-1"
        IMAGE_REPO_NAME = "devsecops-repo"
        IMAGE_TAG = "latest"
        REPOSITORY_URI = "public.ecr.aws/d8r5o7m8/devsecops-repo"
        AWS_ACCESS_KEY_ID = credentials('aws_access_key')
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_key')
    }
    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: 'main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'manu-207', url: 'https://github.com/manu-207/nodejs-demo.git']]]) 
            }
        }

        stage('Building image') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_REPO_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Logging into AWS ECR') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'aws_access_key', variable: 'AWS_ACCESS_KEY_ID'), string(credentialsId: 'aws_secret_key', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                    }
                }
            }
        }

        stage('Pushing to ECR') {
            steps {
                script {
                    sh "aws ecr-public get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin public.ecr.aws/d8r5o7m8"
                    sh "docker build -t ${IMAGE_REPO_NAME} ."
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}"
                    sh "docker push ${REPOSITORY_URI}:${IMAGE_TAG}"
                }
            }
        }
    }
}
